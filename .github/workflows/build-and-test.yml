name: build and test

on:
    push:
    pull_request: 
        branches: [ main ]
        paths: 
        - '**.cs'
        - '**.csproj'

env:
    DOTNET_VERSION: '8.0.404'        

jobs:
    build-and-test:
        
        name: build-and-test-${{matrix.os}}
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [ubuntu-latest]
    
        services:
          sqlserver:
            image: mcr.microsoft.com/mssql/server:latest
            ports:
              - 1433:1433
            env:
              ACCEPT_EULA: Y
              SA_PASSWORD: PkjRej8@30
            options: >-              
              --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P PkjRej8@30 -Q 'SELECT 1' || exit 1"
              --health-interval 10s
              --health-timeout 5s
              --health-retries 3
              --name sqlserver

        steps:
        - uses: actions/checkout@v4
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}
    
        - name: Install dependencies
          run: dotnet restore
          working-directory: ./src

        - name: Aguardar SQL Server
          run: sleep 30

        - name: Configurar banco de dados
          run: |
            sqlcmd -S localhost -U sa -P PkjRej8@30 -Q "CREATE DATABASE ContatosDB;"

        - name: Executar Migrations
          run: |
            dotnet ef database update --connection "Server=localhost;Database=ContatosDB;User Id=sa;Password=PkjRej8@30;"
          
        - name: Build
          run: dotnet build --configuration Release --no-restore
          working-directory: ./src
        
        - name: Test
          run: dotnet test --no-restore --verbosity normal
          working-directory: ./src